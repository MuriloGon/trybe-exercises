== Exercises

* Exercise 1: Structure the tests using mocha and chai for a function that will tell you if a number is "positive", "negative" or "neutral":
This function will take a number as a parameter and return a string as an answer;
  ** When the number passed is greater than 0 it must return "positive", when it is less than 0 it must return "negative" and when equal to 0 it must return "neutral";
  ** Describe all test scenarios using describe ;
  *** Describe all tests that will be done using its ;
  *** Create assertions validating that the returns from each scenario have the expected type and value.

* Exercise 2: Implement the function presented in exercise 1, ensuring that it will pass all the tests you've written.
* Exercise 3 Add to the function a treatment for cases where the parameter informed is not of type Number .
  ** Add the scenario to your test file, passing a value of different type to Number to the function;
  ** Add an assertion to expect the value returned for this case to equal a string "value must be a number";
  ** Implement such validation in your function so that the test passes.

* Exercise 4: Create tests for a function that will write content to a specific file.
  ** This function must receive two parameters: the name of the file and the content of that file.
  ** After completing the writing of the file it should return an ok.
  *** Describe all test scenarios using describe ;
  *** Describe all tests that will be done using its ;
  *** Create assertions validating that the function's return has the expected value and type.
  
* Exercise 5: Implement the function described in exercise 4.
  ** Create the function described in exercise 4 using the fs module of node.
  ** Adapt the tests by adding stub to the fs module used, thus isolating the test.
  ** Ensure that all tests written in exercise 4 will pass successfully.
