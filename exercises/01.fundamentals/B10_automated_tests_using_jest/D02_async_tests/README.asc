== Asynchronous Jest Tests Exercises

. Write a test that calls the callback of an uppercase function, which turns the letters of a word into uppercase letters. Remember to be careful of false positives in asynchronous tests.
+
----
----
Base code for exercises 2 and 3:
The following code simulates a call to the database to search for users. The result of this search is a Promise, which is used by the getUserName method.

. Using the Promise syntax, run a test that checks the result of the `getUserName` function for the case where the user is found, and also a test for the case where the user is not found.
  Tip: See the false data used in the database, available in the variable `users`, to know which IDs exist.

. Rewrite the test from the previous exercise, this time using async / await syntax.
Tip: Use `try / catch` in case of an error.

. The code below searches a user's GitHub, according to the URL, their repositories, and returns a list as a result. Given the URL `` https: // api.github.com / orgs / tryber / repos'`, do a test that verifies that the repositories `'sd-01-week4-5-project-todo-list'` and` 'sd-01-week4-5-project-meme-generator'` are in that list.

. For this exercise, try to guess the output of the `console.log` of the tests below without running them, and see if you have a good understanding of how` beforeEach` and `afterEach` work.

  After writing what you think the result will be, run the tests and see if you got it right.
+
----
----

. In this exercise, you will create functions similar to the code below - the same one that was used as an example on the promise tests.
+
Use as a basis for the following exercises:

.. Add a feature to search for the animal's name - create a function that should pass the test below.
Tip: use the sample code given to create a new function, analyze the tests before starting.
.. Add a new feature to search for the age of the animals. The return should be an array of objects, but if you don't find any, return an error message. Write down both the function and your test.