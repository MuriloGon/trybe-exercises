== Exercises - Async and Callbacks

. Given the code below, what is the order in which the commented lines are finished?
. Now, given the code below, what is the order in which the commented lines are finished?
. The `getPlanet` function below prints the planet Mars synchronously. Modify `getPlanet`, so that Mars is printed asynchronously, after 4 seconds.
. Suppose you need to simulate a message sent from the `Curiosity` robot from Mars to Earth. Curiosity sends the current temperature on Mars to Earth, spending a variable time of up to 5 seconds for it to finish sending. Create the `sendMarsTemperature` function, which prints the temperature on Mars.
. Now that you have made a function that sends the temperature of Mars, suppose that you are able to send to the Curiosity robot what you want to do, once you have successfully obtained the temperature on Mars. Then, links in the sendMarsTemperature function to a callback that contains the actions to be protected over the temperature.
. Finally, the Curiosity robot has a 60% message sending success rate due to the fact that the robot is already very busy with other operations. Therefore, inherent to the sendMarsTemperature function is another callback that contains the actions to be blocked in case of failure.
