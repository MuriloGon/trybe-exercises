
== Exercise - Part 1

Start the exercise by analyzing the page on a small screen to simulate what it might look like on a mobile device (you can use Chrome for this, see no details in Additional Resources).
You will now adjust the CSS to improve the page view.
Perform the following tasks:
* Make the font size bigger;
* Make the font size of the h1 elements smaller;
* Increase the spacing between the figures;
* References a little margin on the page.

* Start expanding the width of your screen. Do this until you reach a point where the current page design no longer works.
** For example, the length of the lines may start to become too long for the text to be easily read. Or maybe the page is wide enough that it no longer makes sense for images to be shown one below the other.

Perform the following tasks:

* Save the width of the screen at the point that you identified that the current layout did not work well (for example 800px). This will be the first breakpoint of the layout. A breakpoint is just a point where we are defining that the current design must change;
* Create a media query in your CSS file, using a pixel dimension that you saved as the min-width of the media query test. ** Within this breakpoint, the following adjustments are restricted:
Change the background color (this will help you to notice when a media query has taken effect);
** Adjust the font size;
** Adjust as page margins;
** Have the images shown in two columns.

You will now create another breakpoint for large screens. Resize your screen again to find a new breakpoint.
* Create a new media query in your CSS file using the dimension you found for large screens (for example 1300px), and make the following adjustments within the breakpoint:
** Change the background color;
** Adjust the font size;
** Adjust as page margins;
** According to the max-width property on the page, to ensure that the width of the lines is not too large.

== Exercise - Part 2

* Using the _mobile first_ approach and media queries, *create three different layout versions for this page*. Each _layout_ must correspond to a different page size (_small_, _medium_ and _large_).
** Make at least one commit for each layout;
* To do this properly, you must pay attention to the content of the page and think about how to show it on each of the screen sizes:
** Where should the list of chapters be positioned?
** How should the story be shown?
** How should the header be positioned?
** What to do with the author's information on each screen size?
You may need to change the HTML a bit, adding elements to facilitate styling, or perhaps changing a block of place within the page.

== Exercise - Part 3

The purpose of this exercise is to use media queries to make the above page look different at the time of printing and on different screen sizes.
* Add a media query to the CSS file and the necessary rules so that the page looks like the image below when it is printed. Specifically:
** Elements with `id header`, navigation and footer should disappear;
The element with `id aside` must be shown below the main content.

image::assets/readme/exercise_3_before_print.png[]
page preview before printing

* Add a media query to the CSS file and the necessary rules to make the page look like the images below when the screen is resized to smaller widths. Specifically:
** The element with `id aside` must disappear;
** The `body` element must not have `padding`;
** The images must not exceed the width of the screen;
** The items within the `navigation` element must appear each on its own line;
** The element with `id header` must be fixed, so that it always appears at the top of the screen even after the user scrolls the page.

image::assets/readme/exercise_3_before_small_phone.png[]
240x320: small screen

image::assets/readme/exercise_3_before_android.png[]
360x640 smartphone screen