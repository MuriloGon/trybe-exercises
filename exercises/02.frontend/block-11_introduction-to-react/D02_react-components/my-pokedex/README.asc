= React Exercise - Pokedex

This project was bootstrapped with https://github.com/facebook/create-react-app[Create React App].

== Available Scripts

In the project directory, you can run:

=== `npm start`

Runs the app in the development mode.
Open http://localhost:3000[http://localhost:3000] to view it in the browser.

The page will reload if you make edits.
You will also see any lint errors in the console.

=== `npm test`

Launches the test runner in the interactive watch mode.
See the section about https://facebook.github.io/create-react-app/docs/running-tests[running tests] for more information.

=== `npm run build`

Builds the app for production to the `build` folder.
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.
Your app is ready to be deployed!

See the section about https://facebook.github.io/create-react-app/docs/deployment[deployment] for more information.

=== `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

== Exercise Instructions

You will implement a Pokedex in a simplified way !! For those unfamiliar with the Pokemon universe, Pokedex is an encyclopedia of all pokemons in nature. For your case, your application needs to show all pokemons present in the data.js file mentioned above.

You can use your imagination to style your application. However, it is mandatory that you implement at least these two components:

. Pokemon: as its name says, this component represents a pokemon. This component receives as input an object that contains information related to a specific pokemon. This component needs to return the following mandatory information to be shown to anyone using the application, this information must be validated using PropTypes:

* pokemon name;
* kind of pokemon;
* pokemon's average weight, accompanied by the unit of measurement used;
* pokemon image.

. Pokedex: this component represents the encyclopedia of pokemon. This component receives as input a list of pokemons to be shown on the screen. For each of these received pokemons, Pokedex calls the Pokemon component.

Here is a suggested implementation of the application:

image::https://course.betrybe.com/front-end/react/components/my-pokedex-project.gif[]
